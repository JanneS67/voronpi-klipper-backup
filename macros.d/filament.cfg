
############################################################################
# Complementary functions controlling variables used by mainsail for display
############################################################################

# Requires appropriately named variables in your tool change macros (these are used my mainsail)
# [gcode_macro T0]
# variable_active: 0
# variable_color: "undefined"

[gcode_macro _SET_ACTIVE_TOOL]
description: Sets the active tool in mainsail (and all others inactive)
gcode:
  {% set TOOL = params.TOOL|default(-1)|int %}
  {% for T in range(9) %}
    {% if T == TOOL %}
      SET_GCODE_VARIABLE MACRO=T{T} VARIABLE=active VALUE=1
    {% else %}
      SET_GCODE_VARIABLE MACRO=T{T} VARIABLE=active VALUE=0
    {% endif %}
  {% endfor %}

# In SuperSlicer you can set the color variables, you also have to
# do regex post-processing to remove the # from the color for klipper
# _SET_TOOL_COLOR TOOL=0 COLOR={extruder_colour[0]}
# _SET_TOOL_COLOR TOOL=1 COLOR={extruder_colour[1]}
# ...
# _SET_TOOL_COLOR TOOL=n COLOR={extruder_colour[n]}
#
# Post processing regex
# Find: _SET_TOOL_COLOR TOOL=([0-9]+) COLOR=#([0-9A-F]+)
# Regular expression: checked
# Replace with: _SET_TOOL_COLOR TOOL=$1 COLOR=$2
[gcode_macro _SET_TOOL_COLOR]
description: Sets a color for mainsail extruder (e.g. TOOL=1 COLOR=FF00FF)
gcode:
  {% set TOOL = params.TOOL|default(-1)|int %}
  {% set COLOR = params.COLOR|default('undefined')|string %}
  SET_GCODE_VARIABLE MACRO=T{TOOL} VARIABLE=color VALUE='"{COLOR}"'

  # Requires [save_variables], for me this is provided by ercf
  SAVE_VARIABLE VARIABLE=t{TOOL}_color VALUE='"{COLOR}"'

# Reload the colors from the [save_variables] if used
[delayed_gcode _SET_TOOL_COLORS_ON_STARTUP]
initial_duration: 1
gcode:
  {% set svv = printer.save_variables.variables %}
  {% for T in range(9) %}
    _SET_TOOL_COLOR TOOL={T} COLOR={svv['t' + (T|string) + '_color']}
  {% endfor %}